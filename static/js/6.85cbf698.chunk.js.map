{"version":3,"sources":["components/content/login/index.module.scss","components/common/formController/index.module.scss","components/common/formController/formController.js","utils/validation/index.js","components/content/login/form/index.jsx","components/content/login/loginContainer.jsx"],"names":["module","exports","FormController","input","meta","touched","error","children","hasError","fieldClass","style","className","Textarea","props","restProps","child","Input","Checkbox","createField","name","component","validator","placeholder","styleLogin","validate","createCheckbox","text","required","value","length","maxLength","ReduxLoginForm","reduxForm","form","handleSubmit","captcha","onSubmit","type","src","alt","styleForm","Login","data","login","this","isAuth","to","React","Component","connect","state","getCaptcha"],"mappings":"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","file":"static/js/6.85cbf698.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__3y0Rp\",\"login__captcha\":\"login_login__captcha__2CF7b\",\"login__title\":\"login_login__title__19EJN\",\"login__form\":\"login_login__form__1naEW\",\"login__field\":\"login_login__field__3Uo7X\",\"login__button\":\"login_login__button__1zaL_\",\"login__checkbox\":\"login_login__checkbox__1ejbp\",\"login__label\":\"login_login__label__3Hran\",\"checkbox\":\"login_checkbox__hEgcb\",\"form-controller\":\"login_form-controller__2azLV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-controller\":\"formController_form-controller__2gPlU\",\"has-error\":\"formController_has-error__1MHl1\",\"form-controller__error\":\"formController_form-controller__error__3TjBH\",\"form-summary-error\":\"formController_form-summary-error__1Bm3n\"};","import React from \"react\";\nimport styleLogin from './../../content/login/index.module.scss'\nimport style from './index.module.scss'\nimport {Field} from \"redux-form\";\n\nconst FormController = ({input, meta:{touched, error}, children}) => {\n    const hasError = touched && error;\n    const fieldClass = hasError ? `${style['form-controller']} ${style['has-error']}` : `${style['form-controller']}`;\n    return (\n        <div className={fieldClass}>\n            {children}\n            {hasError && <span className={style['form-controller__error']}>{error}</span>}\n        </div>\n    )\n};\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return (\n        <FormController {...props}>\n            <textarea {...restProps} {...input} ></textarea>\n        </FormController>\n    )\n};\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return(\n        <FormController {...props}>\n            <input {...restProps} {...input} />\n        </FormController>\n    )\n};\nexport const Checkbox = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return(\n        <FormController {...props}>\n            <input {...restProps} {...input} />\n            <span></span>\n        </FormController>\n    )\n};\nexport const createField = (name, component, validator, placeholder, props = {}) => {\n    return (\n        <div className={styleLogin['login__label']}>\n            <Field className={styleLogin['login__field']} name={name} component={component} validate={validator} placeholder={placeholder} {...props}/>\n        </div>\n    )\n};\nexport const createCheckbox = (name, component, validator, placeholder, props = {}, text = '') => {\n    return (\n        <label className={styleLogin['login__label'] + ' ' + styleLogin['checkbox']}>\n            <Field className={styleLogin['login__checkbox']} name={name} component={component}  {...props}/>\n            <span>{text}</span>\n        </label>\n    )\n};","export const required = value => {\n    if(value && value.length !== 0) return undefined;\n    return 'Field is required';\n};\nexport const maxLength = (length) => {\n    return value => {\n        if(value && value.length < length) return undefined;\n        return `Max length is ${length} symbols`;\n    };\n}","import React from \"react\";\nimport style from './../index.module.scss';\nimport styleForm from './../../../common/formController/index.module.scss';\nimport {reduxForm} from \"redux-form\";\nimport {Checkbox, createCheckbox, createField, Input} from \"../../../common/formController/formController\";\nimport {required} from \"../../../../utils/validation\";\n\nconst LoginForm = ({handleSubmit,error, captcha}) => {\n    return <form className={style['login__form']} onSubmit={handleSubmit}>\n        {createField('email', Input, [required], 'Login', {type:'text'})}\n        {createField('password', Input, [required], 'Password', {type:'password'})}\n        {createCheckbox('rememberMe', Checkbox, [], null, {type: 'checkbox'}, 'remember me')}\n        {captcha && <div className={style['login__captcha']}>\n            <img src={captcha} alt=\"\"/>\n            {createField('captcha', Input, [required], 'Enter symbols from image', {type:'text'})}\n        </div>}\n        {\n            error &&\n                <div className={styleForm['form-summary-error']}>{error}</div>\n        }\n        <div className={style['login__label']}>\n            <button className={style['login__button']}>Submit</button>\n        </div>\n    </form>\n};\nconst  ReduxLoginForm = reduxForm({\n    form: 'login'\n})(LoginForm);\n\nexport default ReduxLoginForm","import React from \"react\";\nimport {login} from \"../../../redux/auth-reducer\";\nimport {connect} from \"react-redux\";\nimport ReduxLoginForm from './form/index';\nimport style from './index.module.scss';\nimport {Redirect} from \"react-router-dom\";\nimport {getCaptcha, isAuth} from \"../../../redux/selectors/auth-selectors\";\n\nclass Login extends React.Component {\n    onSubmit = (data) => {\n        this.props.login(data);\n    };\n    render() {\n        if(this.props.isAuth){\n            return <Redirect to={'/profile'}/>\n        }\n        return <div className={style.login}>\n            <h2 className={style['login__title']}>Login</h2>\n            <ReduxLoginForm onSubmit={this.onSubmit} captcha={this.props.captcha}/>\n        </div>\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: isAuth(state),\n        captcha: getCaptcha(state)\n    }\n}\nexport default connect(mapStateToProps,{login})(Login)"],"sourceRoot":""}